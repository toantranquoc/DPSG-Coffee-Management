/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ThongKeUI;

import Data.ConnectDB;
import Models.Ban;
import Models.DsOrder;
import Models.HoaDon;
import Models.Loai;
import Models.ThucDon;
import Models.account;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pc
 */
public class JpThongKe extends javax.swing.JPanel {

    /**
     * Creates new form JpThongKe
     */
    ConnectDB cn = new ConnectDB();
    NumberFormat tien = new DecimalFormat("#,###,###");

    public JpThongKe() {
        initComponents();
        fillTableHD();
        fillTableMon();
        loadInfor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtableHoadon = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtableMon = new javax.swing.JTable();
        lbHoadonmon = new javax.swing.JLabel();
        lbHoadonhd = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jdateTo = new com.toedter.calendar.JDateChooser();
        jdateFrom = new com.toedter.calendar.JDateChooser();
        btnThongke = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lbTOnghoadon = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbTongtienmon = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbTonggiam = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbTongtienthu = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        lbTongmonban = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lbTongban = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbtongmon = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lbTongloai = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lbTongtaikhoan = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        jtableHoadon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Thời gian", "Tiền món", "Giảm giá", "Thành tiền", "Điểm bán", "Các món"
            }
        ));
        jScrollPane1.setViewportView(jtableHoadon);

        jtableMon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tên món", "Đơn vị tính", "Số lượng", "Doanh thu"
            }
        ));
        jScrollPane2.setViewportView(jtableMon);

        lbHoadonmon.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbHoadonmon.setForeground(new java.awt.Color(255, 0, 0));
        lbHoadonmon.setText("Thống kê theo món");

        lbHoadonhd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbHoadonhd.setForeground(new java.awt.Color(255, 51, 51));
        lbHoadonhd.setText("Thống kê theo hóa đơn");

        jLabel1.setText("Đến ngày");

        jLabel2.setText("Từ ngày");

        jdateTo.setDateFormatString("dd/MM/yyyy");

        jdateFrom.setDateFormatString("dd/MM/yyyy");

        btnThongke.setText("Thống kê");
        btnThongke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongkeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Tổng số hóa đơn thanh toán:");

        lbTOnghoadon.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbTOnghoadon.setForeground(new java.awt.Color(82, 15, 172));
        lbTOnghoadon.setText(".....");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Tiền món:");

        lbTongtienmon.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbTongtienmon.setForeground(new java.awt.Color(162, 11, 11));
        lbTongtienmon.setText("....");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Tiền giảm giá: ");

        lbTonggiam.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbTonggiam.setForeground(new java.awt.Color(16, 121, 95));
        lbTonggiam.setText("......");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Tiền thu về:");

        lbTongtienthu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbTongtienthu.setForeground(new java.awt.Color(162, 11, 11));
        lbTongtienthu.setText(".....");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Tổng số món đã bán:");

        lbTongmonban.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbTongmonban.setForeground(new java.awt.Color(10, 85, 157));
        lbTongmonban.setText(".....");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Tổng số bàn: ");

        lbTongban.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbTongban.setForeground(new java.awt.Color(17, 131, 40));
        lbTongban.setText("jLabel7");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Tổng số món:");

        lbtongmon.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbtongmon.setForeground(new java.awt.Color(17, 131, 40));
        lbtongmon.setText("jLabel7");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Tổng số loại món:");

        lbTongloai.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbTongloai.setForeground(new java.awt.Color(17, 131, 40));
        lbTongloai.setText("jLabel7");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Tổng số tài khoản:");

        lbTongtaikhoan.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbTongtaikhoan.setForeground(new java.awt.Color(17, 131, 40));
        lbTongtaikhoan.setText("jLabel7");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/notebook.png"))); // NOI18N
        jLabel10.setText("jLabel10");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel6))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lbTonggiam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lbTongtienmon, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbTongtienthu, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lbTOnghoadon, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbTongban, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbtongmon, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTongloai, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbTongtaikhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbHoadonhd, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jdateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jdateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(btnThongke)
                        .addGap(42, 42, 42)
                        .addComponent(lbHoadonmon, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(lbTongmonban, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbHoadonmon, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbHoadonhd, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1)
                        .addComponent(jdateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnThongke)
                    .addComponent(jdateTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(lbTOnghoadon))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lbTongtienmon))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(lbTonggiam))
                        .addGap(5, 5, 5)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(lbTongtienthu)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbTongmonban)
                            .addComponent(jLabel12))
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(lbtongmon)
                            .addComponent(jLabel13)
                            .addComponent(lbTongban)
                            .addComponent(jLabel8)
                            .addComponent(lbTongloai)
                            .addComponent(jLabel9)
                            .addComponent(lbTongtaikhoan)))
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    public void fillTableHD() {
        ArrayList<HoaDon> arrayHoadon = cn.GetDSHD();
        DefaultTableModel tableHoadon = new DefaultTableModel();
        tableHoadon.addColumn("Mã hóa đơn");
        tableHoadon.addColumn("Thời gian");
        tableHoadon.addColumn("Tiền món");
        tableHoadon.addColumn("Giảm giá");
        tableHoadon.addColumn("Thành tiền");
        tableHoadon.addColumn("Bàn");
        tableHoadon.addColumn("Các món");
        SimpleDateFormat sf = new SimpleDateFormat("dd/MM/yyyy HH:mm a");
        if (arrayHoadon != null) {
            int tongHd = 0, tongTien = 0, tongTienmon = 0, giamGia = 0, tongGiam = 0;
            for (HoaDon td : arrayHoadon) {
                tongHd++;
                tongTien += td.GetTongTien();
                String tenban = cn.GetBan(td.GetMaBan()).get(0).GetTenBan();
                ArrayList<DsOrder> order = cn.GetDsOrder(td.GetMaHD());
                String cacmon = "";
                int tienmon = 0;
                for (DsOrder ds : order) {
                    tienmon += ds.GetGia() * ds.GetSoLuong();
                    cacmon += ds.GetTenMon() + "(" + ds.GetSoLuong() + ")" + ", ";
                }
                tongTienmon += tienmon;

                String dv = "";
                if (td.GetGiamGia() > 100) {
                    giamGia = td.GetGiamGia();
                }
                if (td.GetGiamGia() == 0) {
                    giamGia = 0;
                }
                if (td.GetGiamGia() <= 100 && td.GetGiamGia() != 0) {
                    giamGia = td.GetGiamGia() * tienmon / 100;
                    dv = "(" + String.valueOf(td.GetGiamGia()) + "%)";
                }
                tongGiam += giamGia;
                tableHoadon.addRow(new Object[]{td.GetMaHD(), sf.format(td.GetGioDen()), tien.format(tienmon), tien.format(giamGia) + dv, tien.format(td.GetTongTien()), tenban, cacmon});
            }
            lbTOnghoadon.setText(tongHd + " hóa đơn");
            lbTongtienthu.setText(tien.format(tongTienmon - tongGiam) + " VND");
            lbTonggiam.setText(tien.format(tongGiam) + " VND");
            lbTongtienmon.setText(tien.format(tongTienmon) + " VND");
        }
        jtableHoadon.setModel(tableHoadon);
        for (int i = 0; i < jtableHoadon.getColumnCount(); i++) {
            Class<?> col = jtableHoadon.getColumnClass(i);
            jtableHoadon.setDefaultEditor(col, null);
        }
        jtableHoadon.getColumnModel().getColumn(0).setMaxWidth(100);
        jtableHoadon.getColumnModel().getColumn(1).setMinWidth(80);
        jtableHoadon.getColumnModel().getColumn(2).setMaxWidth(80);
        jtableHoadon.getColumnModel().getColumn(3).setMaxWidth(100);
        jtableHoadon.getColumnModel().getColumn(4).setMaxWidth(100);
        jtableHoadon.getColumnModel().getColumn(5).setMaxWidth(100);
        jtableHoadon.getColumnModel().getColumn(6).setMaxWidth(150);
    }

    public void fillTableMon() {
        ArrayList<ThucDon> arrayMon = cn.GetChiTietMonByMa();
        DefaultTableModel tableMon = new DefaultTableModel();
        tableMon.addColumn("Tên món");
        tableMon.addColumn("Đơn vị tính");
        tableMon.addColumn("Số lượng");
        tableMon.addColumn("Doanh thu");
        if (arrayMon != null) {

            int somon = 0, tienmon = 0;
            for (ThucDon td : arrayMon) {
                ArrayList<DsOrder> ct = cn.GetGiaSoLuong(td.GetMaMon());
                if (cn.GetGiaSoLuong(td.GetMaMon()).size() > 0) {
                    int gia = 0, soluong = 0;
                    for (DsOrder i : ct) {
                        somon += i.GetSoLuong();
                        soluong += i.GetSoLuong();
                        gia += i.GetGia() * i.GetSoLuong();
                    }
                    tienmon += gia;
                    tableMon.addRow(new Object[]{ct.get(0).GetTenMon(), ct.get(0).GetDVT(), soluong, tien.format(gia) + " VNĐ"});
                }
            }
            lbTongmonban.setText(String.valueOf(somon) + " món");

        } else {
        }
        jtableMon.setModel(tableMon);
        for (int i = 0; i < jtableMon.getColumnCount(); i++) {
            Class<?> col = jtableMon.getColumnClass(i);
            jtableMon.setDefaultEditor(col, null);
        }
    }

    public void loadInfor() {
        ArrayList<Ban> arrayBan = cn.GetBan(0);
        if (arrayBan.size() > 0) {
            int soban = 0;
            for (Ban b : arrayBan) {
                soban++;
            }
            lbTongban.setText("" + soban);
        }
        ArrayList<ThucDon> arrayMon = cn.GetThucDon(null);
        if (arrayMon.size() > 0) {
            int soMon = 0;
            for (ThucDon bDon : arrayMon) {
                soMon++;
            }
            lbtongmon.setText("" + soMon);
        }
        ArrayList<Loai> arrayLoai = cn.GetLoai();
        if (arrayLoai.size() > 0) {
            int soLoai = 0;
            for (Loai loai : arrayLoai) {
                soLoai++;
            }
            lbTongloai.setText("" + soLoai);
        }
        ArrayList<account> arrayAccount = cn.getListaccount();
        if (arrayAccount.size() > 0) {
            int soTk = 0;
            for (account object : arrayAccount) {
                soTk++;
            }
            lbTongtaikhoan.setText("" + soTk);
        }
    }

    public void fillHDbyDate() {
        Date d1 = jdateFrom.getDate();
        Date d2 = jdateTo.getDate();

            String dateFrom = String.format("%1$tY-%1$tm-%1$td", d1);
            String dateTo = String.format("%1$tY-%1$tm-%1$td", d2);
            ArrayList<HoaDon> arrTable = cn.GetDSHD();
            DefaultTableModel tbmodel = new DefaultTableModel();

            tbmodel.addColumn("Mã hóa đơn");
            tbmodel.addColumn("Thời gian");
            tbmodel.addColumn("Tiền món");
            tbmodel.addColumn("Giảm giá");
            tbmodel.addColumn("Thành tiền");
            tbmodel.addColumn("Điểm bán");
            tbmodel.addColumn("Các món");
            SimpleDateFormat sf = new SimpleDateFormat("dd/MM/yyyy HH:mm a");
            if (arrTable.size() > 0) {
                int tongHd = 0, tongTien = 0, tongTienmon = 0, giamGia = 0, tongGiam = 0;
                for (HoaDon td : arrTable) {

                    tongTien += td.GetTongTien();
                    String tenban = cn.GetBan(td.GetMaBan()).get(0).GetTenBan();
                    ArrayList<DsOrder> order = cn.GetCtHDByDate(td.GetMaHD(), dateFrom, dateTo);
                    if (order.size() > 0) {
                        tongHd++;
                        String cacmon = "";
                        int tienmon = 0;
                        for (DsOrder ds : order) {
                            tienmon += ds.GetGia() * ds.GetSoLuong();
                            cacmon += ds.GetTenMon() + "(" + ds.GetSoLuong() + ")" + ", ";
                        }
                        tongTienmon += tienmon;

                        String dv = "";
                        if (td.GetGiamGia() > 100) {
                            giamGia = td.GetGiamGia();
                        }
                        if (td.GetGiamGia() == 0) {
                            giamGia = 0;
                        }
                        if (td.GetGiamGia() <= 100 && td.GetGiamGia() != 0) {
                            giamGia = td.GetGiamGia() * tienmon / 100;
                            dv = "(" + String.valueOf(td.GetGiamGia()) + "%)";
                        }
                        tongGiam += giamGia;
                        tbmodel.addRow(new Object[]{td.GetMaHD(), sf.format(td.GetGioDen()), tien.format(tienmon), tien.format(giamGia) + dv, tien.format(td.GetTongTien()), tenban, cacmon});

                    }
                }
                lbTOnghoadon.setText(tongHd + " hóa đơn");
                lbTongtienthu.setText(tien.format(tongTienmon - tongGiam) + " VND");
                lbTonggiam.setText(tien.format(tongGiam) + " VND");
                lbTongtienmon.setText(tien.format(tongTienmon) + " VND");
            }
            jtableHoadon.setModel(tbmodel);
            for (int i = 0; i < jtableHoadon.getColumnCount(); i++) {
                Class<?> col = jtableHoadon.getColumnClass(i);
                jtableHoadon.setDefaultEditor(col, null);
            
            jtableHoadon.getColumnModel().getColumn(0).setMaxWidth(100);
            jtableHoadon.getColumnModel().getColumn(1).setMinWidth(80);
            jtableHoadon.getColumnModel().getColumn(2).setMaxWidth(80);
            jtableHoadon.getColumnModel().getColumn(3).setMaxWidth(100);
            jtableHoadon.getColumnModel().getColumn(4).setMaxWidth(100);
            jtableHoadon.getColumnModel().getColumn(5).setMaxWidth(100);
            jtableHoadon.getColumnModel().getColumn(6).setMaxWidth(150);
        }
    }

    public void fillMonbyDate() {
        Date d1 = jdateFrom.getDate();
        Date d2 = jdateTo.getDate();
            String dateFrom = String.format("%1$tY-%1$tm-%1$td", d1);
            String dateTo = String.format("%1$tY-%1$tm-%1$td", d2);
            ArrayList<ThucDon> arrayThucdon = cn.GetChiTietMonByMa();
              DefaultTableModel tbmodel = new DefaultTableModel();

        tbmodel.addColumn("Tên món");
        tbmodel.addColumn("Đơn vị tính");
        tbmodel.addColumn("Số lượng");
        tbmodel.addColumn("Doanh thu");
        if(arrayThucdon.size() > 0) {
            int somon = 0,tienmon=0;
            for (ThucDon td : arrayThucdon) {
                ArrayList<DsOrder> ct = cn.GetHdByDate(dateFrom, dateTo, td.GetMaMon());
                if(ct.size() > 0){
                    int gia =0,soluong =0;
                     for(DsOrder i : ct){
                         somon += i.GetSoLuong();
                         soluong += i.GetSoLuong();
                         gia += i.GetGia() * i.GetSoLuong();
                     }
                     tienmon += gia;
                         tbmodel.addRow(new Object[]{ct.get(0).GetTenMon(), ct.get(0).GetDVT(), soluong, tien.format(gia)+" VNĐ"});
                }
            }
            lbTongmonban.setText(String.valueOf(somon)+" món");
            jtableMon.setModel(tbmodel);
        
        
        for(int i = 0; i < jtableMon.getColumnCount();i++){
            Class<?> col = jtableMon.getColumnClass(i);
            jtableMon.setDefaultEditor(col, null);
        }                
            
        }
    }
    private void btnThongkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongkeActionPerformed
        if (jdateFrom.getDate() == null || jdateTo.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn ngày!");
        } else {
            fillHDbyDate();
            fillMonbyDate();
        }
    }//GEN-LAST:event_btnThongkeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThongke;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private com.toedter.calendar.JDateChooser jdateFrom;
    private com.toedter.calendar.JDateChooser jdateTo;
    private javax.swing.JTable jtableHoadon;
    private javax.swing.JTable jtableMon;
    private javax.swing.JLabel lbHoadonhd;
    private javax.swing.JLabel lbHoadonmon;
    private javax.swing.JLabel lbTOnghoadon;
    private javax.swing.JLabel lbTongban;
    private javax.swing.JLabel lbTonggiam;
    private javax.swing.JLabel lbTongloai;
    private javax.swing.JLabel lbTongmonban;
    private javax.swing.JLabel lbTongtaikhoan;
    private javax.swing.JLabel lbTongtienmon;
    private javax.swing.JLabel lbTongtienthu;
    private javax.swing.JLabel lbtongmon;
    // End of variables declaration//GEN-END:variables
}
